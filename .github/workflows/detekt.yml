name: Detekt

on:
    pull_request_target:
        branches:
            - "*"
    workflow_dispatch:

permissions:
    contents: read
    pull-requests: write

jobs:
    detekt:
        name: Run detekt
        runs-on: ubuntu-latest
        concurrency:
            group: detekt-${{ github.event.pull_request.number }}
            cancel-in-progress: true
        permissions:
            contents: read
            pull-requests: write
        outputs:
            sarif_exists: ${{ steps.check_sarif.outputs.exists }}
        steps:
            -   name: Checkout PR code
                uses: actions/checkout@v4
                with:
                  ref: ${{ github.event.pull_request.head.ref }}
                  repository: ${{ github.event.pull_request.head.repo.full_name }}
            -   uses: ./.github/actions/setup-normal-workspace
            -   name: Run detekt main (w/ typing analysis)
                run: |
                  ./gradlew detektMain --stacktrace
            -   name: Check if SARIF file exists
                if: always()
                id: check_sarif
                run: |
                    if [ -f "build/reports/detekt/main.sarif" ]; then
                        echo "exists=true" >> $GITHUB_OUTPUT
                    else
                        echo "exists=false" >> $GITHUB_OUTPUT
                    fi

            -   name: Add label if detekt fails
                if: ${{ failure() && steps.check_sarif.outputs.exists == 'true' }}
                uses: actions-ecosystem/action-add-labels@v1
                with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    labels: 'Detekt'
            -   name: Remove label if detekt passes
                if: success()
                uses: actions-ecosystem/action-remove-labels@v1
                with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    labels: 'Detekt'

            -   name: Annotate detekt failures
                if: ${{ !cancelled() && steps.check_sarif.outputs.exists == 'true' }}
                run: |
                    chmod +x .github/scripts/process_detekt_sarif.sh
                    ./.github/scripts/process_detekt_sarif.sh build/reports/detekt/main.sarif | tee detekt_output.txt
            -   name: Upload detekt output as artifact
                if: ${{ !cancelled() && steps.check_sarif.outputs.exists == 'true' }}
                uses: actions/upload-artifact@v4
                with:
                    name: detekt-output
                    path: detekt_output.txt

    detekt_comment:
        name: Comment detekt failures on PR
        runs-on: ubuntu-latest
        concurrency:
            group: detekt-comment-${{ github.event.pull_request.number }}
            cancel-in-progress: true
        needs: detekt
        if: ${{ needs.detekt.outputs.sarif_exists == 'true' && failure() && github.event.pull_request.draft == false }}
        permissions:
            pull-requests: write
        steps:
            -   name: Checkout base repo code
                uses: actions/checkout@v4
                with:
                    ref: ${{ github.event.pull_request.head.sha }}
                    repository: ${{ github.event.pull_request.head.repo.full_name }}
            -   name: Download detekt output
                uses: actions/download-artifact@v4
                with:
                    name: detekt-output
                    path: .
            -   name: Set up Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: '>=21'
            -   name: Process detekt output and create comment
                env:
                    PR_SHA: ${{ github.event.pull_request.head.sha }}
                    GITHUB_REPOSITORY: ${{ github.repository }}
                run: |
                    node .github/scripts/process_detekt_output.js

            -   name: Add comment to PR
                uses: actions/github-script@v6
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    script: |
                        const fs = require('fs');
                        const commentBody = fs.readFileSync('detekt_comment.txt', 'utf8');
                        github.rest.issues.createComment({
                            issue_number: context.issue.number,
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            body: commentBody
                        })
